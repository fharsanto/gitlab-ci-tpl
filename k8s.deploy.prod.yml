variables:
  CI_HUB: hub.spesolution.com
  CI_DEPLOYMENT_FILE: deployment.yml
  CI_ENV_FILTER_KEY: ^CI\|^KUBE\|^GITLAB\|^DOCKER
  CI_ENV_FILTER_CMD: grep -v '$CI_FILTER_ENV_KEY'
  CI_ENV_GS: "true" # generating secret in k8s, fill false when disabled it

docker_to_k8s_prod:
  image: $CI_HUB/tools/kubectl:latest
  stage: deploy
  script:
    - echo "Deploy $CI_PROJECT_NAME to k8s ns $KUBE_NAMESPACE ..."
    - echo "generate secret $CI_ENV_GS with cmd (eval $CI_ENV_FILTER_CMD) and filter $CI_ENV_FILTER_KEY ."
    - >
      if [ "$CI_ENV_GS" == "true" ]; then
        kubectl create secret generic $CI_PROJECT_NAME-env \
          -n $KUBE_NAMESPACE --save-config --dry-run=client \
          --from-env-file=<(compgen -v | (eval $CI_ENV_FILTER_CMD) | while read line; do echo $line=${!line};done) \
          -o yaml | kubectl apply -f -
      else
        echo "none happened"
      fi
    - |
      cat <<EOF >./kustomization.yaml
      resources:
      - deployment.yaml
      images:
      - newTag: master
      EOF
    - kubectl kustomize .
    - kubectl kustomize . | kubectl  -n $KUBE_NAMESPACE apply -f -
    - kubectl rollout restart deployment/$CI_PROJECT_NAME -n $KUBE_NAMESPACE
  environment:
    name: production
    url: https://sukangetik.com
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
      when: manual
